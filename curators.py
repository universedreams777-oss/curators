import telebot
import re
import os

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
API_TOKEN = '8053472683:AAHhlg9q26TXeF2GvmOghUiWL2fXltE3I9U'
CHANNEL_ID = -1002704063181  # ID –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)

curators = [
    "@neurogury",
    "@Good_zee_calligraphy",
    "@vscpnoy",
    "@Olga_Lukashina_Vocal"
]

# === –í–†–ï–ú–ï–ù–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï ===
last_index = -1
assigned_texts = set()

# === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–®–õ–´–• –£–ß–ï–ù–ò–ö–û–í ===
if os.path.exists("processed.txt"):
    with open("processed.txt", "r", encoding="utf-8") as f:
        for line in f:
            assigned_texts.add(line.strip())

# === –°–û–ó–î–ê–ù–ò–ï –ë–û–¢–ê ===
bot = telebot.TeleBot(API_TOKEN)


# === –£–î–ê–õ–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô –° "–ø—Ä–æ—à–ª–æ 20 —á–∞—Å–æ–≤" ===
@bot.channel_post_handler(func=lambda m: m.text and m.text.lower().startswith("–ø—Ä–æ—à–ª–æ 20 —á–∞—Å–æ–≤"))
def delete_old_messages(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        print(f"üßπ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text[:40]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")


# === –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–û–ë–©–ï–ù–ò–ô "–ù–∞—Ç–∞–ª–∏—è" ===
@bot.channel_post_handler(func=lambda message: message.text and message.text.lower().startswith("–Ω–∞—Ç–∞–ª–∏—è"))
def handle_message(message):
    global last_index

    text = message.text.strip()

    # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ —É–∂–µ –±—ã–ª–æ
    if text in assigned_texts:
        print("‚è© –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return
    assigned_texts.add(text)

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    with open("processed.txt", "a", encoding="utf-8") as f:
        f.write(text + "\n")

    # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫—É—Ä–∞—Ç–æ—Ä–∞ –ø–æ –∫—Ä—É–≥—É
    last_index = (last_index + 1) % len(curators)
    curator = curators[last_index]

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    name_match = re.search(r"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\s+(.+)", text)
    email_match = re.search(r"–ü–æ—á—Ç–∞\s+([^\s]+)", text)
    link_match = re.search(r"https?://[^\s\]]+", text)

    student_name = name_match.group(1).strip() if name_match else "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"
    student_link = link_match.group(0).strip() if link_match else "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"

    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    final_text = (
        f"*üß†ü•∞ –¢–≤–æ–π —É—á–µ–Ω–∏–∫, –ø—Ä–æ–≤–µ—Ä—å –µ–≥–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ {curator}*\n\n"
        f"*{student_name}*\n\n"
        f"*üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —É—á–µ–Ω–∏–∫–∞:* {student_link}"
    )

    bot.send_message(CHANNEL_ID, final_text, parse_mode="Markdown")
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫—É—Ä–∞—Ç–æ—Ä—É {curator}: {student_name}")


# === –ó–ê–ü–£–°–ö ===
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
# === –ó–ê–ü–£–°–ö ===
import time

while True:
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        bot.polling(none_stop=True, timeout=60, long_polling_timeout=30)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
        time.sleep(5)

